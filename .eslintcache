[{"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/index.js":"1","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/App.js":"2","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Wrapper.js":"3","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Main.js":"4","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Header.js":"5","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/DataArea.js":"6","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/DataTable.js":"7","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Navbar.js":"8","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/utils/API.js":"9","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/utils/DataAreaContext.js":"10","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/DataBody.js":"11","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Search.js":"12"},{"size":390,"mtime":1608183518585,"results":"13","hashOfConfig":"14"},{"size":292,"mtime":1608185014855,"results":"15","hashOfConfig":"14"},{"size":180,"mtime":1608183187463,"results":"16","hashOfConfig":"14"},{"size":170,"mtime":1608182969264,"results":"17","hashOfConfig":"14"},{"size":496,"mtime":1608182919544,"results":"18","hashOfConfig":"14"},{"size":2943,"mtime":1608183391928,"results":"19","hashOfConfig":"14"},{"size":991,"mtime":1608182831998,"results":"20","hashOfConfig":"14"},{"size":272,"mtime":1608183093114,"results":"21","hashOfConfig":"14"},{"size":192,"mtime":1608183262222,"results":"22","hashOfConfig":"14"},{"size":111,"mtime":1608184694913,"results":"23","hashOfConfig":"14"},{"size":0,"mtime":1608182459210,"results":"24","hashOfConfig":"14"},{"size":686,"mtime":1608183170260,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"fmcd4g",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/index.js",[],["52","53"],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/App.js",[],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Wrapper.js",[],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Main.js",[],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Header.js",[],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/DataArea.js",["54"],"import React, {useState, useEffect} from \"react\";\nimport DataTable from \"./DataTable\";\nimport Navbar from \"./Navbar\";\nimport API from \"../utils/API\";\nimport DataAreaContext from \"../utils/DataAreaContext\"\n\nconst DataArea = () => {\n      const [developerState, setDeveloperState] = useState({\n        users: [],\n        order: \"ascend\",\n        filteredUsers: [],\n        headings: [\n          { name: \"Image\", width: \"10%\", },\n          { name: \"Name\", width: \"10%\", },\n          { name: \"Phone\", width: \"20%\", },\n          { name: \"Email\", width: \"20%\", },\n          { name: \"DOB\", width: \"10%\", }\n        ]\n      });\n    \n      const handleSort = heading => {\n        if (developerState.order === \"descend\") {\n            setDeveloperState({\n                order:\"ascend\"\n            })\n        } else{\n            setDeveloperState({\n                order:\"descend\"\n            })\n        }\n    \n        const compareFnc = (a, b) => {\n          if (developerState.order === \"ascend\") {\n            if (a[heading] === undefined) {\n              return 1;\n            } else if (b[heading] === undefined) {\n                return -1;\n            } else if (heading === \"name\") {\n                return a[heading].first.localeCompare(b[heading].first);\n            } else {\n                return b[heading] - a[heading];\n            } \n          } else {\n              if (a[heading] === undefined){\n                return 1;\n          } else if (b[heading] === undefined){\n              return -1;\n          } else if (heading ===\"name\"){\n              return b[heading].first.localeCompare(a[heading].first);\n          } else {\n              return b[heading]-  a[heading];\n            }\n          }\n        }\n        const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n\n        setDeveloperState({\n          ...developerState,\n          filteredUsers: sortedUsers\n});\n\n };\n   \n      const handleSearchChange = event => {\n        const filter = event.target.value;\n        const filteredList = developerState.users.filter(item => {\n          let values = item.name.first.toLowerCase();\n          return values.indexOf(filter.toLowerCase()) !== -1;\n      });\n    \n        setDeveloperState({ \n        ...developerState, \n        filteredUsers: filteredList });\n        };\n\n      useEffect(() => {\n        API.getUsers().then(results => {\n          setDeveloperState({\n            ...developerState,\n            users: results.data.results,\n            filteredUsers: results.data.results\n          });\n        });\n      }, []);\n    \n      return (\n        <DataAreaContext.Provider\n          value={{ developerState, handleSearchChange, handleSort }}\n        >\n        <Navbar />\n          <div className=\"data-area\">\n            {developerState.filteredUsers.length > 0 \n      ? <DataTable />\n        : <div></div>\n      }\n          </div>\n        </DataAreaContext.Provider>\n      );\n    }\n    \n    export default DataArea;","/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/DataTable.js",[],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Navbar.js",[],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/utils/API.js",[],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/utils/DataAreaContext.js",[],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/DataBody.js",[],"/Users/gretchenkrammes/Documents/GitHub/Employee-Directory/src/components/Search.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":84,"column":10,"nodeType":"61","endLine":84,"endColumn":12,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'developerState'. Either include it or remove the dependency array. You can also do a functional update 'setDeveloperState(d => ...)' if you only need 'developerState' in the 'setDeveloperState' call.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [developerState]",{"range":"68","text":"69"},[2541,2543],"[developerState]"]